#=============================================================
# GX example
#=============================================================

 debug = false

[Dimensions]
 ntheta = 24             # number of points along field line (theta) per 2pi segment    
 nperiod = 1             # number of 2pi segments along field line is 2*nperiod-1
 ny = 64                 # number of real-space grid-points in y, nky = 1 +   (ny-1)/3
 nx = 192                # number of real-space grid-points in x, nkx = 1 + 2*(nx-1)/3

 nhermite = 48           # number of hermite moments (v_parallel resolution)
 nlaguerre = 16          # number of laguerre moments (mu B resolution)

[Domain]
 y0 = 20.0               # controls box length in y (in units of rho_ref) and minimum ky, so that ky_min*rho_ref = 1/y0  --> ky_min = 0.0714, ky_max = 2.57, L_y = 88
 boundary = "linked"     # use twist-shift boundary conditions along field line

[Physics]
 nonlinear_mode = true   # this is a linear calculation
 ei_colls = false        # turn off electron-ion collisions

[Time]
 t_max = 500.0           # end time (in units of L_ref/vt_ref)
 scheme = "rk3"          # use RK3 timestepping scheme (with adaptive timestepping)

[Initialization]
 gaussian_init = true            # initial perturbation is a gaussian in theta
 ikpar_init = 0                  # parallel wavenumber of initial perturbation
 init_field = "density"          # initial condition set in density
 init_amp = 1.0e-3               # amplitude of initial condition

[Geometry]
 geo_option = "miller"   # use Miller geometry (values provided below)
 
 vmec_file = "none"      # if geo_option = "vmec": name of the vmec file
 alpha = 0.0             # if geo_option = "vmec": Field line label theta - iota*phi. alpha = 0.0 usually corresponds to a field line on the outboard side
 npol = 6                # if geo_option = "vmec": Number of poloidal turns. The field line goes from (-npol*PI, npol*PI]
 
[Dissipation]
 closure_model = "none"  # no closure assumptions (just truncation)
 hypercollisions = true  # use hypercollision model
 hyper = true            # use hyperdiffusion
 HB_hyper = false        # use Hammett-Belli hyperdiffusivity model

 nu_hyper_m = 0.5        # coefficient of hermite hypercollisions
 nu_hyper_l = 0.5        # coefficient of laguerre hypercollisions
 D_hyper = 0.5           # coefficient of hyperdiffusion
 p_hyper_m = 6           # exponent of hermite hypercollisions
 p_hyper_l = 6           # exponent of laguerre hypercollisions
 p_hyper = 2             # exponent of hyperdiffusion is 2*p_hyper = 4
 D_H = 0.5               # coefficient of H-B hyperdiffusion
 w_osc = 0.0             # frequency parameter in the H-B model
 p_HB = 2                # exponent for the H-B model

[Restart]
 save_for_restart = true
 nsave = 100             # save restart file every nsave timesteps
#restart_to_file = ""    # Specify restart file name, otherwise “[input_stem].restart.nc”

restart = false
restart_from_file = "none" # Specify restart file name, otherwise “[input_stem].restart.nc”


[Diagnostics]
 nwrite = 100            # write diagnostics every nwrite timesteps (this is NOT a/c_s) (=1 doesn't work)
 omega = true            # compute and write linear growth rate and frequency
 fluxes = true           # compute and write heat and particle fluxes
 fields = true           # compute and write electric and magnetic fields
 moments = true          # write moments on the grid
